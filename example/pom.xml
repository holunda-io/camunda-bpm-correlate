<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.holunda</groupId>
    <artifactId>camunda-bpm-correlate-parent</artifactId>
    <version>1.0.1-SNAPSHOT</version>
    <!-- It is ok to use the extension parent, there is only Kotlin and some managed deps defined there -->
    <relativePath>../bom/parent/pom.xml</relativePath>
  </parent>

  <!--
  Defines a parent for all examples and to avoid large poms.
  -->
  <name>Example / Parent</name>
  <artifactId>camunda-bpm-correlate-example-parent</artifactId>
  <packaging>pom</packaging>

  <properties>
    <spin.version>1.15.0</spin.version>
    <spring-cloud.version>2021.0.5</spring-cloud.version>
    <axon.framework.version>4.5.12</axon.framework.version>
  </properties>

  <modules>
    <module>common</module>
    <module>spring-cloud/flight-kafka</module>
    <module>spring-cloud/hotel-kafka</module>
    <module>spring-cloud/reservation-kafka</module>
    <module>axon/flight-axon</module>
    <module>axon/hotel-axon</module>
    <module>axon/reservation-axon</module>
    <module>itest</module>

  </modules>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.holunda</groupId>
        <artifactId>camunda-bpm-correlate-bom</artifactId>
        <version>${project.parent.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.camunda.spin</groupId>
        <artifactId>camunda-spin-bom</artifactId>
        <version>${spin.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- FIXME: Remove as soon as spring fixes those issues -->
      <!-- https://github.com/spring-cloud/spring-cloud-function/issues/925 -->
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-function-context</artifactId>
        <version>3.2.5</version>
      </dependency>


      <!-- Axon Framework -->
      <dependency>
        <groupId>org.axonframework</groupId>
        <artifactId>axon-bom</artifactId>
        <version>${axon.framework.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- Examples Common -->
      <dependency>
        <groupId>io.holunda</groupId>
        <artifactId>camunda-bpm-correlate-example-common</artifactId>
        <version>${project.parent.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- Spring Boot -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <!-- Jackson -->
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jdk8</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-kotlin</artifactId>
    </dependency>

    <!-- DB -->
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
    </dependency>
    <!-- Actuator and metrics -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <!-- Create a docker image for local development -->
      <id>docker-assembly</id>

      <properties>
        <final-artifact-name>assembly</final-artifact-name>
        <final-image-name>${project.groupId}/${project.artifactId}</final-image-name>
      </properties>

      <build>
        <resources>
          <resource>
            <directory>src/main/docker</directory>
            <filtering>false</filtering>
            <includes>
              <include>Dockerfile</include>
              <include>.maven-dockerexclude</include>
            </includes>
            <targetPath>${project.build.directory}</targetPath>
          </resource>
          <resource>
            <directory>src/main/resources</directory>
            <filtering>false</filtering>
            <includes>
              <include>**/*.*</include>
            </includes>
          </resource>
        </resources>

        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.springframework.boot</groupId>
              <artifactId>spring-boot-maven-plugin</artifactId>
              <version>${spring-boot.version}</version>
              <configuration>
                <finalName>${final-artifact-name}</finalName>
              </configuration>
              <executions>
                <execution>
                  <goals>
                    <goal>repackage</goal>
                  </goals>
                </execution>
              </executions>
            </plugin>
            <plugin>
              <groupId>io.fabric8</groupId>
              <artifactId>docker-maven-plugin</artifactId>
              <version>0.39.1</version>
              <extensions>true</extensions>
              <executions>
                <execution>
                  <id>build</id>
                  <phase>package</phase>
                  <goals>
                    <goal>build</goal>
                  </goals>
                  <configuration>
                    <verbose>true</verbose>
                    <images>
                      <image>
                        <name>${final-image-name}</name>
                        <build>
                          <contextDir>${project.build.directory}</contextDir>
                          <dockerFile>Dockerfile</dockerFile>
                        </build>
                      </image>
                    </images>
                  </configuration>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
  </profiles>

</project>

spring:
  application:
    name: Kafka Travel Agency Example
  jpa:
    open-in-view: true
    show-sql: false
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVER_HOST:localhost}:${KAFKA_BOOTSTRAP_SERVER_PORT:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.ByteArraySerializer
      value-serializer: org.apache.kafka.common.serialization.ByteArraySerializer
    security.protocol: ${KAFKA_SECURITY_PROTOCOL_OVERRIDE:PLAINTEXT}
  cloud:
    stream:
      bindings:
        correlate-ingress-binding:
          content-type: application/json
          destination: ${KAFKA_TOPIC_CORRELATE_INGRES:correlate-ingress}
          binder: correlate-ingress-binder
          group: ${KAFKA_GROUP_ID}
      binders:
        correlate-ingress-binder:
          type: kafka
          defaultCandidate: false
          inheritEnvironment: false
          environment:
            spring:
              kafka:
                consumer:
                  key-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
                  value-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
              cloud:
                stream:
                  kafka:
                    binder:
                      autoCreateTopics: false
                      autoAddPartitions: false
                      brokers: ${KAFKA_BOOTSTRAP_SERVER_HOST:localhost}:${KAFKA_BOOTSTRAP_SERVER_PORT:9092}
                      configuration:
                        security.protocol: ${KAFKA_SECURITY_PROTOCOL_OVERRIDE:PLAINTEXT}

camunda:
  bpm:
    login:
      enabled: true
      user-id: admin
    default-serialization-format: application/json
    admin-user:
      id: admin
      email: admin@localhost
      first-name: Admin
      last-name: Administratus
      password: admin
    metrics:
      enabled: false
      db-reporter-activate: false

management:
  server:
    port: ${MANAGEMENT_PORT:9005}
  endpoint:
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: 'prometheus,health,info,loggers'
  metrics:
    export:
      prometheus:
        enabled: true
    enable:
      jvm: false
      tomcat: false
      cache: false
      logback: false
      process: false

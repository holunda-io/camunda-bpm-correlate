hotel:
  processing-delay: ${PROCESSING_DELAY:1}

server:
  port: 8083

spring:
  application:
    name: Kafka Hotel Example Service
  cloud:
    stream:
      function:
        definition: hotelProcessor
        bindings:
          hotelProcessor-in-0: hotels-binding
          hotelProcessor-out-0: hotels-result-binding
      bindings:
        hotels-binding:
          destination: ${KAFKA_TOPIC_HOTEL:hotel}
          binder: hotels
          group: ${KAFKA_GROUP_ID:hotel}
        hotels-result-binding:
          destination: ${KAFKA_TOPIC_HOTEL_RESULT:correlate-ingres}
          binder: hotels
          group: ${KAFKA_GROUP_ID:hotel}
      binders:
        hotels:
          type: kafka
          defaultCandidate: false
          inheritEnvironment: false
          environment:
            spring:
              kafka:
                producer:
                  key-serializer: org.apache.kafka.common.serialization.ByteArraySerializer
                  value-serializer: org.apache.kafka.common.serialization.ByteArraySerializer
                consumer:
                  key-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
                  value-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
              cloud:
                stream:
                  kafka:
                    binder:
                      autoCreateTopics: false
                      autoAddPartitions: false
                      brokers: ${KAFKA_BOOTSTRAP_SERVER_HOST:localhost}:${KAFKA_BOOTSTRAP_SERVER_PORT:9092}
                      configuration:
                        security.protocol: ${KAFKA_SECURITY_PROTOCOL_OVERRIDE:PLAINTEXT}
  jpa:
    open-in-view: true
